name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  SOLUTION_FILE: 'GameCopier.sln'
  PROJECT_PATH: 'GameCopier/GameCopier/GameCopier.csproj'

jobs:
  build:
    runs-on: windows-latest
    
    strategy:
      matrix:
        configuration: [Debug, Release]
        platform: [x64, x86]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Build solution
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration ${{ matrix.configuration }} --platform ${{ matrix.platform }} --no-restore

    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_FILE }} --configuration ${{ matrix.configuration }} --platform ${{ matrix.platform }} --no-build --verbosity normal --collect:"XPlat Code Coverage"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.configuration }}-${{ matrix.platform }}
        path: |
          **/TestResults/
          **/coverage.cobertura.xml

    - name: Publish application (Release only)
      if: matrix.configuration == 'Release'
      run: |
        dotnet publish ${{ env.PROJECT_PATH }} \
          --configuration Release \
          --runtime win-${{ matrix.platform }} \
          --self-contained true \
          --output ./publish/win-${{ matrix.platform }} \
          -p:PublishSingleFile=true \
          -p:IncludeNativeLibrariesForSelfExtract=true

    - name: Upload build artifacts
      if: matrix.configuration == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: gamecopier-${{ github.sha }}-win-${{ matrix.platform }}
        path: ./publish/win-${{ matrix.platform }}/
        retention-days: 30

  code-quality:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Run code analysis
      run: dotnet build ${{ env.SOLUTION_FILE }} --configuration Release --verbosity normal

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Download test results
      uses: actions/download-artifact@v4
      with:
        pattern: test-results-*
        merge-multiple: true

    - name: Generate code coverage report
      run: |
        reportgenerator \
          -reports:**/coverage.cobertura.xml \
          -targetdir:coverage-report \
          -reporttypes:Html;Cobertura

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage-report/

  security-scan:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_FILE }}

    - name: Run security scan
      run: |
        dotnet list package --vulnerable --include-transitive
        dotnet list package --deprecated

    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'GameCopier'
        path: '.'
        format: 'ALL'

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: reports/